name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Clean up potential Go conflicts
      run: |
        sudo rm -rf /usr/local/go
        sudo rm -rf ~/go/pkg/mod/golang.org/toolchain* || true
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-1.22-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-1.22-
    
    - name: Install development tools
      run: task install-tools

    - name: Generate API client
      run: task generate

    - name: Run tests
      run: task test

    - name: Run linting
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: --timeout=5m
      continue-on-error: true
    
    - name: Build for multiple platforms
      run: task build
    
    - name: Upload build artifacts
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: coolifyme-dev-${{ github.sha }}
        path: bin/
        retention-days: 7

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
    
    - name: Install development tools
      run: task install-tools
    
    - name: Generate API client
      run: task generate
    
    - name: Run security scan
      run: task security-scan
      continue-on-error: true 