name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.22'
    
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-1.22-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-1.22-
    
    - name: Install dependencies
      run: go mod download
    
    - name: Install development tools
      run: task install-tools
    
    - name: Install required dependencies
      run: |
        go get github.com/getkin/kin-openapi/openapi3
        go get github.com/oapi-codegen/runtime
        go get github.com/oapi-codegen/runtime/types
    
    - name: Generate API client
      run: task generate
    
    - name: Run tests
      run: task test
    
    - name: Check formatting
      run: |
        task fmt
        if [ -n "$(git status --porcelain)" ]; then
          echo "Code is not formatted. Please run 'task fmt'"
          exit 1
        fi
    
    - name: Build
      run: task build

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.22'
    
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
    
    - name: Install dependencies
      run: go mod download
    
    - name: Install development tools  
      run: task install-tools
    
    - name: Install required dependencies
      run: |
        go get github.com/getkin/kin-openapi/openapi3
        go get github.com/oapi-codegen/runtime
        go get github.com/oapi-codegen/runtime/types
    
    - name: Generate API client
      run: task generate
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: --timeout=5m

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.22'
    
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
    
    - name: Install dependencies
      run: go mod download
    
    - name: Install development tools
      run: task install-tools
    
    - name: Install required dependencies
      run: |
        go get github.com/getkin/kin-openapi/openapi3
        go get github.com/oapi-codegen/runtime
        go get github.com/oapi-codegen/runtime/types
    
    - name: Generate API client
      run: task generate
    
    - name: Run security scan
      run: task security-scan 